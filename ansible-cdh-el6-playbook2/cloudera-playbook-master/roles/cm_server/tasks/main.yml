---

- include_vars: ../../../group_vars/db_server.yml
- include_vars: ../../../group_vars/cdh_servers.yml

- include_role:
    name: cm_agents

- name: config ntp
  template:
    src: ntp.conf.master.j2
    dest: /etc/ntp.conf
    mode: 0644
  notify: restart ntpd


- name: Prepare Cloudera Manager Server External Database
  command: |
    {{ scm_prepare_database_script_path }}  -f
    --host {{ hostvars[db_hostname]['inventory_hostname'] }}
    {{ database_type }} {{ databases.scm.name }} {{ databases.scm.user }} {{ databases.scm.pass }}
  changed_when: False

- name: Create CSD directory
  file:
    path: /opt/cloudera/csd
    state: directory
    owner: cloudera-scm
    group: cloudera-scm
    mode: 0755

# copy init.d script as service
- name: copy cloudera-scm-server script to init.d
  template:
    src: cloudera-scm-server.service.j2
    dest: /etc/init.d/cloudera-scm-server
    mode: 0755

# copy parcels to /opt/parcel-repoï¼š if path ends with "/" , only copy contents
- name: copy parcels to /opt/parcel-repo
  copy:
    src: cdh_parcels/
    dest: /opt/cloudera/parcel-repo/
    owner: cloudera-scm
    group: cloudera-scm
    mode: 0755

- name: mkdir /var/lib/cloudera-scm-server for cm_server
  file:
    path: /var/lib/cloudera-scm-server
    state: directory
    owner: cloudera-scm
    group: cloudera-scm

- name: Start the Cloudera Manager Server
  service:
    name: "{{ item }}"
    state: restarted
    enabled: yes
  with_items:
    - cloudera-scm-server
    - cloudera-scm-agent

- name: wait cloudera-scm-server
  wait_for:
    host: "{{ hostvars[scm_hostname]['inventory_hostname'] }}"
    port: "{{ scm_port }}"
    state: started
    timeout: 600

# Trigger handler to wait for SCM to startup
- name: Get Cloudera Manager API version
  uri:
    url: http://{{ hostvars[scm_hostname]['inventory_hostname'] }}:{{ scm_port }}/api/version
    method: GET
    status_code: 200
    user: "{{ scm_default_user }}"
    password: "{{ scm_default_pass }}"
    force_basic_auth: yes
    return_content: yes
  register: result

# Set base CM API URL
- set_fact:
    cm_api_url: "http://{{ hostvars[scm_hostname]['inventory_hostname'] }}:{{ scm_port }}/api/{{ result.content }}"

- debug:
    var: cm_api_url

- name: Get the host identifiers and names from Cloudera Manager
  uri:
    url: "{{ cm_api_url }}/hosts"
    method: GET
    status_code: 200
    user: "{{ scm_default_user }}"
    password: "{{ scm_default_pass }}"
    force_basic_auth: yes
    return_content: yes
  register: scm_host_list

- name: Print scm_host_list
  debug:
    var: scm_host_list

- include: license.yml
